/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package edu.neu.info5100.components;

import edu.neu.info5100.database.DB;
import edu.neu.info5100.driver.INFO5100Project;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sidb
 */
public class DriverCurrentTripPage extends javax.swing.JPanel {

  /**
   * Creates new form DriverCurrentTripPage
   */
  public DriverCurrentTripPage() {
    initComponents();
    LoadCurrentTrip();
    LoadPassengers();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        fromLocationText = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        toLocationText = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        statusText = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CurrentPassengersBooked = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        rideIDText = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Geeza Pro", 1, 18)); // NOI18N
        jLabel1.setText("From");

        fromLocationText.setFont(new java.awt.Font("Geeza Pro", 1, 18)); // NOI18N
        fromLocationText.setText("FromLocation");

        jLabel3.setFont(new java.awt.Font("Geeza Pro", 1, 18)); // NOI18N
        jLabel3.setText("To");

        toLocationText.setFont(new java.awt.Font("Geeza Pro", 1, 18)); // NOI18N
        toLocationText.setText("toLocation");

        jLabel5.setFont(new java.awt.Font("Geeza Pro", 1, 18)); // NOI18N
        jLabel5.setText("Status");

        statusText.setFont(new java.awt.Font("Geeza Pro", 1, 18)); // NOI18N
        statusText.setText("jLabel6");

        CurrentPassengersBooked.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(CurrentPassengersBooked);

        jLabel7.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel7.setText("Passenger List");

        jButton1.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jButton1.setText("Complete Current Trip");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel2.setText("Ride ID ");

        rideIDText.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        rideIDText.setText("ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(72, 72, 72)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(291, 291, 291)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(toLocationText)
                                    .addComponent(fromLocationText))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7)
                                .addGap(264, 264, 264))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(statusText, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(211, 211, 211)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rideIDText)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(88, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(fromLocationText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(toLocationText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(rideIDText))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(statusText)))
                .addGap(85, 85, 85)
                .addComponent(jLabel7)
                .addGap(47, 47, 47)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    // TODO add your handling code here:
        Connection conn = new DB().connection();
        try {
      PreparedStatement pstm = conn.prepareStatement(
        "Update cabrides set status='Completed' where drivername=? and id=?;"
      );
      pstm.setString(
          1,
          String.valueOf(INFO5100Project.getSession().GetUsername())
        );
      pstm.setString(
          2,
          String.valueOf(rideIDText.getText())
        );
            System.out.println(pstm);

     pstm.executeUpdate();
     LoadCurrentTrip();
     LoadPassengers();
      
    } catch (Exception e) {
      e.printStackTrace();
    }
        

    
  }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
//        String selectedStatus=(String) changeRideStatus.getSelectedItem();
//         Connection conn = new DB().connection();
//        try {
//      PreparedStatement pstm = conn.prepareStatement(
//        "Update cabrides set status=? where drivername=? and id=?;"
//      );
//       pstm.setString(
//          1,
//          String.valueOf(selectedStatus)
//        );
//      pstm.setString(
//          2,
//          String.valueOf(INFO5100Project.getSession().GetUsername())
//        );
//      pstm.setString(
//          3,
//          String.valueOf(rideIDText.getText())
//        );
//            System.out.println(pstm);
//
//     pstm.executeUpdate();
//     LoadCurrentTrip();
//     LoadPassengers();
//      
//    } catch (Exception e) {
//      e.printStackTrace();
//    }
//        
    }//GEN-LAST:event_jButton2ActionPerformed

  private void LoadCurrentTrip() {
    Connection conn = new DB().connection();
    rideIDText.setText("No Booking");
    toLocationText.setText("No Booking");
    fromLocationText.setText("No Booking");
    statusText.setText("No Booking");
    try {
      PreparedStatement pstm = conn.prepareStatement(
        "SELECT id,drivername, fromLocation, toLocation, status FROM cabrides WHERE drivername = ? and status='InProgress';"
      );
      pstm.setString(
          1,
          String.valueOf(INFO5100Project.getSession().GetUsername())
        );
            System.out.println(pstm);

      ResultSet rs = pstm.executeQuery();
      while (rs.next()) {
        rideIDText.setText(rs.getString("id"));
        fromLocationText.setText(rs.getString("fromLocation"));
        toLocationText.setText(rs.getString("toLocation"));
        statusText.setText(rs.getString("status"));
        //                DefaultComboBoxModel model = (DefaultComboBoxModel)comboBox1.getModel();

      }
    } catch (Exception e) {
      e.printStackTrace();
    }
  }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CurrentPassengersBooked;
    private javax.swing.JLabel fromLocationText;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel rideIDText;
    private javax.swing.JLabel statusText;
    private javax.swing.JLabel toLocationText;
    // End of variables declaration//GEN-END:variables

    private void LoadPassengers() {
        Connection conn = new DB().connection();
     

    DefaultTableModel model = new DefaultTableModel();
    
    model.addColumn("Customer Username");
     model.addColumn("Mobile ");


    try {
      PreparedStatement pstm = conn.prepareStatement(
        "SELECT b.customerusername,ud.mobile from bookings b LEFT JOIN userdetails ud on b.customerusername=ud.username where b.fromLocation=? and b.toLocation=? and rideid=?;"
      );
      System.out.println("Entered try loop");
      pstm.setString(
          1,
          String.valueOf(fromLocationText.getText())
        );
      pstm.setString(
          2,
          String.valueOf(toLocationText.getText())
        );
      
      pstm.setString(
          3,
          String.valueOf(rideIDText.getText())
        );
       System.out.println(pstm);
      
        ResultSet Rs = pstm.executeQuery();
        
      while (Rs.next()) {
        model.addRow(
          new Object[] {
            Rs.getString("customerusername"),
               Rs.getString("mobile"),


          }
        );
      }
    } catch (Exception e) {
      System.out.println(e);
    }
    CurrentPassengersBooked.setModel(model);
//    
//    try {
//      PreparedStatement pstm = conn.prepareStatement(
//        "SELECT b.customerusername,ud.mobile from bookings b LEFT JOIN userdetails ud on b.customerusername=ud.username where b.fromLocation=? and b.toLocation=? and rideid=?;"
//      );
//      pstm.setString(
//          1,
//          String.valueOf(fromLocationText)
//        );
//      pstm.setString(
//          2,
//          String.valueOf(toLocationText)
//        );
//      
//      pstm.setString(
//          4,
//          String.valueOf(rideIDText)
//        );
//            System.out.println(pstm);
//
//      ResultSet rs = pstm.executeQuery();
//      while (rs.next()) {
//        rideIDText.setText(rs.getString("id"));
//        fromLocationText.setText(rs.getString("fromLocation"));
//        toLocationText.setText(rs.getString("toLocation"));
//        statusText.setText(rs.getString("status"));
//        //                DefaultComboBoxModel model = (DefaultComboBoxModel)comboBox1.getModel();
//
//      }
//    } catch (Exception e) {
//      System.out.println(e);
//    }
//        
        
    }

//    private void StatusCombo() {
//         changeRideStatus.removeAllItems();
// 
//         changeRideStatus.addItem("Delayed");
//         changeRideStatus.addItem("Cancelled");
//        //String usernameSupport=String.valueOf(INFO5100Project.getSession().GetUsername());
//       
//}
}