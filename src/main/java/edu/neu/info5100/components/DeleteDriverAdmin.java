/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package edu.neu.info5100.components;

import edu.neu.info5100.database.DB;
import edu.neu.info5100.driver.INFO5100Project;
import static java.lang.System.console;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author megha
 */
public class DeleteDriverAdmin extends javax.swing.JPanel {

    /**
     * Creates new form DeleteDriverAdmin
     */
    public DeleteDriverAdmin() {
        initComponents();
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ListOfDriversTable = new javax.swing.JTable();
        btnDelDriverAdmin = new javax.swing.JButton();

        ListOfDriversTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ListOfDriversTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListOfDriversTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ListOfDriversTable);

        btnDelDriverAdmin.setText("Delete Driver");
        btnDelDriverAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelDriverAdminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(btnDelDriverAdmin))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(btnDelDriverAdmin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ListOfDriversTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListOfDriversTableMouseClicked
        // TODO add your handling code here:
//         Connection conn = new DB().connection();
//         DefaultTableModel model = (DefaultTableModel)ListOfDriversTable.getModel();
//
//
//        // get the selected row index
//       int selectedRowIndex = ListOfDriversTable.getSelectedRow();
//       String driverToDelete= (model.getValueAt(selectedRowIndex, 2).toString());
//       System.out.println(driverToDelete);
//        try {
//      PreparedStatement pstm = conn.prepareStatement(
//        "DELETE FROM userdetails WHERE username='?';"
//      );
// pstm.setString(
//          1,
//          String.valueOf(driverToDelete)
//        
//      );      ResultSet Rs = pstm.executeQuery();
//      while (Rs.next()) {
//        model.addRow(
//          new Object[] {
//            Rs.getString("name"),
//            Rs.getString("username"),
//            Rs.getString("organization"),
//            Rs.getString("enterprise"),
//
//          }
//        );
//      }
//    } catch (Exception e) {
//      System.out.println(e.getMessage());
//    }
//    ListOfDriversTable.setModel(model);
//  
              
    }//GEN-LAST:event_ListOfDriversTableMouseClicked

    private void btnDelDriverAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelDriverAdminActionPerformed
        // TODO add your handling code here:
            Connection conn = new DB().connection();

         DefaultTableModel model = (DefaultTableModel)ListOfDriversTable.getModel();


        // get the selected row index
       int selectedRowIndex = ListOfDriversTable.getSelectedRow();
       String driverToDelete= (model.getValueAt(selectedRowIndex, 1).toString());
       System.out.println(driverToDelete);
        try {
      PreparedStatement pstm = conn.prepareStatement(
        "DELETE FROM userdetails WHERE username=?;"
      );
 pstm.setString(
          1,
          String.valueOf(driverToDelete)
        
      );      
        int rs = pstm.executeUpdate();
        
     pstm = conn.prepareStatement(
        "DELETE FROM users WHERE username=?;"
      );
 pstm.setString(
          1,
          String.valueOf(driverToDelete)
        
      );      
        rs = pstm.executeUpdate();
        }
       
     catch (Exception e) {
      System.out.println(e.getMessage());
    }
    loadTable();
  
              
                                              

    }//GEN-LAST:event_btnDelDriverAdminActionPerformed
public void loadTable() {
    Connection conn = new DB().connection();

    DefaultTableModel model = new DefaultTableModel();
    
    model.addColumn("Driver Name");
     model.addColumn("Driver User Name");
    
    model.addColumn("Organization");
    model.addColumn("Enterprise");

    try {
      PreparedStatement pstm = conn.prepareStatement(
        "Select name, username, organization , enterprise from userdetails where role='driver';"
      );
        ResultSet Rs = pstm.executeQuery();
      while (Rs.next()) {
        model.addRow(
          new Object[] {
            Rs.getString("name"),
            Rs.getString("username"),
            Rs.getString("organization"),
            Rs.getString("enterprise"),

          }
        );
      }
    } catch (Exception e) {
      System.out.println(e);
    }
    ListOfDriversTable.setModel(model);
  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable ListOfDriversTable;
    private javax.swing.JButton btnDelDriverAdmin;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
