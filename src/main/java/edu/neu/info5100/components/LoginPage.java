/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package edu.neu.info5100.components;

import edu.neu.info5100.database.DB;
import edu.neu.info5100.driver.INFO5100Project;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author sidb
 */
public class LoginPage extends javax.swing.JPanel {

  /**
   * Creates new form LoginPage
   */
  public LoginPage() {
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        LoginButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();

        jLabel1.setText("Username");

        jLabel2.setText("Password");

        username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameActionPerformed(evt);
            }
        });

        LoginButton.setText("Login");
        LoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Welcome back..");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(LoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(username)
                            .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(LoginButton)
                .addGap(20, 20, 20))
        );
    }// </editor-fold>//GEN-END:initComponents

  private void usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_usernameActionPerformed

  private boolean isVerified(String username){
       int doc =0;
    Connection conn = new DB().connection();
    try {

      PreparedStatement pstm = conn.prepareStatement(
        "SELECT verified FROM userdetails Where username = ?"
      );
      
      pstm.setString(1, username);
      ResultSet rs = pstm.executeQuery();
      while (rs.next()) {
         doc = rs.getInt("verified");
        //                DefaultComboBoxModel model = (DefaultComboBoxModel)comboBox1.getModel();
       if(doc==1){
            return true;
       }
       
      }
    } catch (Exception e) {
      System.out.println(e);
    }
      
      return false;
  }
  
  private void LoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginButtonActionPerformed
    // TODO add your handling code here:
    
    
    if(username.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Username is Mandatory");
        }else if(password.getPassword().equals("")){
            JOptionPane.showMessageDialog(this, "Password is Mandatory");
        }
    
    Connection conn = new DB().connection();
    PreparedStatement pstm;
    
    
    if (username.getText().isEmpty() && password.getPassword().equals("")) {
      JOptionPane.showMessageDialog(null, "Input username/password");
    } 
    else if(!isVerified(username.getText())){
          JOptionPane.showMessageDialog(null, "Verify Email");

    }    else {
      try {
        pstm =
          conn.prepareStatement(
            "Select username, role,password, id, COUNT(*) as count from userdetails where username=? and password=?"
          );
        pstm.setString(1, username.getText());
        pstm.setString(2, String.valueOf(password.getPassword()));
        ResultSet Rs = pstm.executeQuery();

        while (Rs.next()) {
          if (Rs.getInt("count") == 0) {
            JOptionPane.showMessageDialog(
              null,
              "Login Failed because username/password is wrong"
            );
          } else {
            System.out.println(Rs.getString("role"));
            INFO5100Project
              .getSession()
              .SetSession(Rs.getString("username"), Rs.getString("role"),Rs.getInt("id"));
            
            if(Rs.getString("role").equals("customer")){
                   INFO5100Project.getUI().ChangeLeftPanel(new CustomerLeftPane(), "CustomerLeftPane");
                  INFO5100Project.getUI().ChangeRightPanel(new CustomerDashboard(), "CustomerDashboard");                                   

            }else if(Rs.getString("role").equals("driver")){
                 INFO5100Project.getUI().ChangeLeftPanel(new DriverLeftPane(), "DriverLeftPane");
                 INFO5100Project.getUI().ChangeRightPanel(new LandingPage(), "LandingPage");
            }
            else if(Rs.getString("role").equals("admin")){
                INFO5100Project.getUI().ChangeLeftPanel(new AdminLeftPanel(), "AdminLeftPanel");
                 INFO5100Project.getUI().ChangeRightPanel(new LandingPage(), "LandingPage");
            }
            else if(Rs.getString("role").equals("support")){
                INFO5100Project.getUI().ChangeLeftPanel(new CustomerSupportAgentLeftPanel(), "CustomerSupportAgentLeftPanel");
                 INFO5100Project.getUI().ChangeRightPanel(new LandingPage(), "LandingPage");
            }
             else if(Rs.getString("role").equals("drivermanager")){
                INFO5100Project.getUI().ChangeLeftPanel(new DriverManagerLeftPanel(), "DriverManagerLeftPanel");
                 INFO5100Project.getUI().ChangeRightPanel(new LandingPage(), "LandingPage");
            }else if(Rs.getString("role").equals("emanager")){
                INFO5100Project.getUI().ChangeLeftPanel(new EnterpriseLeftpane(), "enterprisemanagerPane");
                 INFO5100Project.getUI().ChangeRightPanel(new EnterpriseDashboard(), "LandingPage");
            }
//            else if(Rs.getString("role").equals("emanager")){
//                INFO5100Project.getUI().ChangeLeftPanel(new EnterpriseLeftpane(), "EnterpriseLeftpane");
//                 INFO5100Project.getUI().ChangeRightPanel(new LandingPage(), "LandingPage");
//            }
//            else if(Rs.getString("role").equals("emanager")){
//                INFO5100Project.getUI().ChangeLeftPanel(new EnterpriseLeftpane(), "EnterpriseLeftpane");
//                 INFO5100Project.getUI().ChangeRightPanel(new LandingPage(), "LandingPage");
            else if(Rs.getString("role").equals("omanager")){
                INFO5100Project.getUI().ChangeLeftPanel(new OrgLeftPanel(), "OrgLeftPanel");
                 INFO5100Project.getUI().ChangeRightPanel(new LandingPage(), "LandingPage");
            }
            else if(Rs.getString("role").equals("analyst")){
                INFO5100Project.getUI().ChangeLeftPanel(new AnalystLeftPane(), "AnalystLeftPane");
                 INFO5100Project.getUI().ChangeRightPanel(new Reporting(), "Reporting");
            }
//                             switch (Rs.getString("role")) {
//                                 case "customer":
//                                 case "driver":
//                                     INFO5100Project.getUI().ChangeLeftPanel(new DriverLeftPane(), "DriverLeftPane");
//                                 default:
//                                    INFO5100Project.getUI().ChangeLeftPanel(new CustomerLeftPane(), "CustomerLeftPane");
//
//                                     
//                             }

          }
        }
      } catch (SQLException e) {
        e.printStackTrace();
      }
    }
  }//GEN-LAST:event_LoginButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LoginButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField password;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
