/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package edu.neu.info5100.components;

import com.mailjet.client.errors.MailjetException;
import com.mailjet.client.errors.MailjetSocketTimeoutException;
import edu.neu.info5100.database.DB;
import edu.neu.info5100.driver.INFO5100Project;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author sidb
 */
public class SignUpPage extends javax.swing.JPanel {

    /**
     * Creates new form SignUpPage
     */
    public SignUpPage() {
        initComponents();
        LoadOrganisations();
        LoadRoles();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        btnSignup = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtRole = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtMobile = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtGender = new javax.swing.JComboBox<>();
        txtGenderValue = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        dropDownOrg = new javax.swing.JComboBox<>();
        inputOrg = new javax.swing.JTextField();
        dropDownRole = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        emailVal = new javax.swing.JTextField();

        jLabel2.setText("Name");

        btnSignup.setText("Sign Up");
        btnSignup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSignupActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Please fill in this form to create an account");

        jLabel6.setText("Password");

        jLabel5.setText("Role");

        jLabel4.setText("Organisation");

        jLabel3.setText("Mobile");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        jLabel7.setText("Age");

        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });

        jLabel8.setText("Username");

        txtGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Transgender", "Non-Conforming", "I'd prefer not to say" }));
        txtGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGenderActionPerformed(evt);
            }
        });

        jLabel9.setText("Gender");

        dropDownOrg.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        dropDownOrg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropDownOrgActionPerformed(evt);
            }
        });

        dropDownRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        dropDownRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropDownRoleActionPerformed(evt);
            }
        });

        jLabel10.setText("Email");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(219, 219, 219))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(emailVal, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel9))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnSignup)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(dropDownOrg, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(inputOrg))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtGender, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtGenderValue, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                                    .addComponent(txtAge)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(dropDownRole, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtRole))
                                    .addComponent(txtMobile))))
                        .addGap(0, 203, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtGender)
                        .addComponent(jLabel9))
                    .addComponent(txtGenderValue, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtMobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dropDownOrg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputOrg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dropDownRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(emailVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addComponent(btnSignup)
                .addGap(18, 18, 18))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void txtGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGenderActionPerformed
        // TODO add your handling code here:
        String gender=txtGender.getSelectedItem().toString();
        txtGenderValue.setText(gender);
    }//GEN-LAST:event_txtGenderActionPerformed
     private boolean inputValidation(String regexExp,String inputText){
        Pattern p=Pattern.compile(regexExp);
        Matcher m=p.matcher(inputText);
        return m.matches();
        
    }
    private void btnSignupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSignupActionPerformed
        // TODO add your handling code here:
        
       Connection conn = new DB().connection();
        String name=txtName.getText();
        String mobile=txtMobile.getText();
        String age=txtAge.getText();
        String username=txtUsername.getText();
        String password=txtPassword.getText();
        String gender=txtGenderValue.getText();
        String role=txtRole.getText();
        String org=inputOrg.getText();
                String email=emailVal.getText();

        
        //Validations
         ArrayList<String> errList=new ArrayList<>( );
        int errCount=0;
        String regexName="^[A-Z].*";
        String regexPhone="^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$";
//        String regexAge="1[5-9]|[3-5][0-9][60]";
        String regexUsername="^[A-Za-z]+[0-9]+$";
         String regexPassword="^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&-+=()])(?=\\S+$).{8,20}$";
        if(inputValidation(regexName,name) && !"".equals(name)){
            
            System.out.println("Valid name");
        } else {
            errList.add("Please enter a valid  name");
            errCount++;
        }
        if(!"".equals(age) && Integer.parseInt(age)>15 && Integer.parseInt(age)<60 ) {
        
            System.out.println("Valid age");
        }
        else{
             errList.add("Please enter a valid value for age");
                         errCount++;

        }
        
        if(!"".equals(mobile)&& inputValidation(regexPhone,mobile))
        {
            
            System.out.println("Valid mobile");;
        } else {
            errList.add("Please enter a valid  mobile number");
            errCount++;
        }
          if("".equals(inputOrg.getText())){
              errList.add("Please select a valid  organization");
            errCount++;
          }
          if("".equals(txtRole.getText())){
              errList.add("Please select a valid role");
                errCount++;
          }
          if("".equals(txtGenderValue.getText())){
              errList.add("Please select a valid gender");
                errCount++;
          }
          if(!"".equals(username) && inputValidation(regexUsername,username)){
              PreparedStatement pstm;
            try {
                
                pstm = conn.prepareStatement(
                        "Select username from userdetails where username=?"
                );  
            pstm.setString(1,username);

        System.out.println(pstm);
        ResultSet rs=pstm.executeQuery();
        while(rs.next()){

        if (rs.getString("username").equals(username)) {
          errList.add("Username exists! Please try again");
           errCount++;
        }}
            }
            catch (Exception ex) {
                  System.out.println(ex);
            }
        
        } 
          else{
              errList.add("Please enter a valid username ( alphanumeric usernames only )");
              errCount++;
          }
           if(inputValidation(regexPassword,password) && !"".equals(password)){
            
            System.out.println("Valid password");
        } else {
            errList.add("Please enter a valid password");
            errCount++;
        }
          
          
      
        //                }
 
          
//        if(inputValidation(regexAge,String.valueOf(age)) && age>=0 && !"".equals(String.valueOf(age))){
//            person.setAge(age);
//        } else {
//            errList.add("Please enter valid age ");
//            errCount++;
//        }
//
//        if(inputValidation(regexPhone,String.valueOf(mobileNumber)) && !"".equals(String.valueOf(mobileNumber))){
//            person.setMobileNumber(mobileNumber);
//        } else {
//            errList.add("Please enter valid cell number ");
//            errCount++;
//        }
//
//        if(inputValidation(regexEmail,email) && !"".equals(email)){
//            person.setEmailAddress(email);
//        } else {
//            errList.add("Please enter a valid email ");
//            errCount++;
//        }
//        //        if(lblImage.getIcon()==null){
//            //            emp.setProfileImage(profileImage);
//            //         } else {
//            //            errList.add("Please upload an image ");
//            //            errCount++;
//            //        }
//        if(inputValidation(regexUsername,username) && !"".equals(username)){
//            person.setUsername(username);
//        } else {
//            errList.add("Please enter a valid username : the length of the characters must be atleast 4 and must contain lower case alphabets and numbers only");
//            errCount++;
//        }
//        person.setPassword(password);
        String errMessageFinal = "";
        if(errCount>0){
            for( int i=0;i<errList.size();i++){
                errMessageFinal=errMessageFinal+errList.get(i)+"\n";
            }
            JOptionPane.showMessageDialog(this, errMessageFinal);
        }
        else{
            
            //JOptionPane.showMessageDialog(null,"Signup successful");
        //Inserting into the users table for login
//        try{
//            PreparedStatement pstm = conn.prepareStatement(
//          "INSERT INTO users (username,password,role) VALUES(?, ?, ?);"
//        );
//        pstm.setString(1,username);
//        pstm.setString(2, password);
//        pstm.setString(3, role);
//
//        System.out.println(pstm);
//        pstm.executeUpdate();
//        JOptionPane.showMessageDialog(this, "Sign up successful");
//      } catch (Exception e3) {
//        System.out.println("Not able to create request");
//            System.out.println(e3);
//      }
    
          
          
      
          

//            txtAge.setText("");
//            txtEmail.setText("");
//        txtFirstName.setText("");
//        txtGenderValue.setText("");
//        txtLastName.setText("");
//        txtMobileNumber.setText("");
//        txtPassword.setText("");
//        txtUsername.setText("");
//        txtRoleValue.setText("");

 

// 
//      Connection conn = new DB().connection();
      try {
        PreparedStatement pstm = conn.prepareStatement(
          "INSERT INTO userdetails (name,mobile,age,username,password,gender,role,organization,email) VALUES(?, ?, ?,?,?,?,?,?,?);"
        );
        pstm.setString(1,name);
        pstm.setString(2, mobile);
        pstm.setString(3, age);
        pstm.setString(4, username);
         pstm.setString(5,password);
        pstm.setString(6, gender);
        pstm.setString(7, role);
        pstm.setString(8, org);
        pstm.setString(9, email);
   try {
               new EmailVerifier().SendEmail(email, name);
           } catch (MailjetException | MailjetSocketTimeoutException ex) {
               Logger.getLogger(SignUpPage.class.getName()).log(Level.SEVERE, null, ex);
           }
        System.out.println(pstm);
        pstm.executeUpdate();

        //                }
        JOptionPane.showMessageDialog(
          null,
          "Signup successful Check Email for Verification"
        );
        //Inserting into the users table for login
        pstm = conn.prepareStatement(
          "INSERT INTO users (username,password,role) VALUES(?, ?, ?);"
        );
        pstm.setString(1,username);
        pstm.setString(2, password);
        pstm.setString(3, role);

        System.out.println(pstm);
        pstm.executeUpdate();
      } catch (Exception e3) {
        System.out.println("Not able to create request");
           // System.out.println(e3);
      }
    
    }//GEN-LAST:event_btnSignupActionPerformed
    }
    private void dropDownOrgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropDownOrgActionPerformed
        // TODO add your handling code here:
             String selectedOrg = (String) dropDownOrg.getSelectedItem();
             inputOrg.setText(selectedOrg);

    }//GEN-LAST:event_dropDownOrgActionPerformed

    private void dropDownRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropDownRoleActionPerformed
        // TODO add your handling code here:
         String selectedRole = (String) dropDownRole.getSelectedItem();
             txtRole.setText(selectedRole);

    }//GEN-LAST:event_dropDownRoleActionPerformed
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSignup;
    private javax.swing.JComboBox<String> dropDownOrg;
    private javax.swing.JComboBox<String> dropDownRole;
    private javax.swing.JTextField emailVal;
    private javax.swing.JTextField inputOrg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtAge;
    private javax.swing.JComboBox<String> txtGender;
    private javax.swing.JLabel txtGenderValue;
    private javax.swing.JTextField txtMobile;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtRole;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void LoadOrganisations() {
 dropDownOrg.removeAllItems();

        //String usernameSupport=String.valueOf(INFO5100Project.getSession().GetUsername());
        Connection conn = new DB().connection();
    try {

      PreparedStatement pstm = conn.prepareStatement(
        "SELECT name FROM organization;"
      );
      
            System.out.println(pstm);

      ResultSet rs = pstm.executeQuery();
    
      while (rs.next()) {
          dropDownOrg.addItem((rs.getString("name")));
          

      }
    } catch (Exception e) {
      System.out.println("null");
    }
 
    }

    private void LoadRoles() {
        dropDownRole.removeAllItems();
        dropDownRole.addItem("customer");
        dropDownRole.addItem("driver");
        
        
    }
 }
