/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package edu.neu.info5100.components;

import edu.neu.info5100.database.DB;
import edu.neu.info5100.driver.INFO5100Project;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author sidb
 */
public class DriverCreateRide extends javax.swing.JPanel {

  /**
   * Creates new form DriverCreateRide
   */
  public DriverCreateRide() {
    initComponents();
    LoadPickupDropdown();
    LoadDestinationDropdown();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        pickUpDropdown = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        destinationDropDown = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        dateTimePicker1 = new com.github.lgooddatepicker.components.DateTimePicker();
        CreateTripButton = new javax.swing.JButton();

        jLabel1.setText("From");

        pickUpDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        pickUpDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pickUpDropdownActionPerformed(evt);
            }
        });

        jLabel2.setText("To");

        destinationDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("Date");

        CreateTripButton.setText("Create Trip");
        CreateTripButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateTripButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(CreateTripButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(dateTimePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(5, 5, 5))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pickUpDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(destinationDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pickUpDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(destinationDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(dateTimePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(CreateTripButton)
                .addGap(40, 40, 40))
        );
    }// </editor-fold>//GEN-END:initComponents

     private boolean CheckIfTripinProgress() {
    Connection conn = new DB().connection();
    try {
      PreparedStatement pstm = conn.prepareStatement(
        "SELECT status, drivername from cabrides WHERE drivername=? AND status='InProgress';"
      );
       pstm.setString(
          1,
          String.valueOf(INFO5100Project.getSession().GetUsername())
        );
      ResultSet rs = pstm.executeQuery();
      while (rs.next()) {
        //        rideIDVal.setText(rs.getString("rideid"));
        //        pickupLabel.setText(rs.getString("fromLocation"));
        //        DestinationLabel.setText(rs.getString("toLocation"));
        //        StatusText.setText(rs.getString("status"));

        //                DefaultComboBoxModel model = (DefaultComboBoxModel)comboBox1.getModel();
        if (rs.getString("status").equals("InProgress")) {
          return true;
        }
      }
    } catch (Exception e) {
      System.out.println("null");
    }
    return false;
  }
  private void CreateTripButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateTripButtonActionPerformed
    // TODO add your handling code here:
    System.out.println(  "Created New Trip for" +   dateTimePicker1.datePicker.toString()+ " "+ dateTimePicker1.timePicker.toString());
      
      Connection conn = new DB().connection();
      
      if (CheckIfTripinProgress()) {
      JOptionPane.showMessageDialog(
        null,
        "You can create only one ride at a time. Please complete the existing ride before creating new ride"
      );
    }else{
          
     
      try {
        PreparedStatement pstm = conn.prepareStatement(
          "INSERT INTO cabrides (drivername, fromLocation, toLocation, date, time, status) VALUES(?, ?, ?,?,?,?);"
        );
        pstm.setString(
          1,
          String.valueOf(INFO5100Project.getSession().GetUsername())
        );
      pstm.setString(2, String.valueOf(pickUpDropdown.getSelectedItem()));
        pstm.setString(3, String.valueOf(destinationDropDown.getSelectedItem()));
        pstm.setString(4, dateTimePicker1.datePicker.toString());
        pstm.setString(5, dateTimePicker1.timePicker.toString());
        pstm.setString(6, "Scheduled");

        System.out.println(pstm);
        pstm.executeUpdate();

        //                }
        JOptionPane.showMessageDialog(
          null,
          "Trip Creation Successfull"
        );
      } catch (Exception e3) {
        System.out.println("null");
      }
       }
    
  }//GEN-LAST:event_CreateTripButtonActionPerformed

    private void pickUpDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pickUpDropdownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pickUpDropdownActionPerformed
  private void LoadPickupDropdown() {
    Connection conn = new DB().connection();
    try {
      pickUpDropdown.removeAllItems();

      PreparedStatement pstm = conn.prepareStatement(
        "SELECT Distinct fromLocation FROM locations"
      );
      ResultSet rs = pstm.executeQuery();
      while (rs.next()) {
        String doc = rs.getString("fromLocation");
        //                DefaultComboBoxModel model = (DefaultComboBoxModel)comboBox1.getModel();

        pickUpDropdown.addItem(doc);
      }
    } catch (Exception e) {
      System.out.println("null");
    }
  }

  private void LoadDestinationDropdown() {
    Connection conn = new DB().connection();
    try {
      destinationDropDown.removeAllItems();

      PreparedStatement pstm = conn.prepareStatement(
        "SELECT Distinct toLocation FROM locations"
      );
      ResultSet rs = pstm.executeQuery();
      while (rs.next()) {
        String doc = rs.getString("toLocation");
        //                DefaultComboBoxModel model = (DefaultComboBoxModel)comboBox1.getModel();

        destinationDropDown.addItem(doc);
      }
    } catch (Exception e) {
      System.out.println("null");
    }
  }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CreateTripButton;
    private com.github.lgooddatepicker.components.DateTimePicker dateTimePicker1;
    private javax.swing.JComboBox<String> destinationDropDown;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JComboBox<String> pickUpDropdown;
    // End of variables declaration//GEN-END:variables
}
